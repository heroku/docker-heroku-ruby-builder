name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true
      - name: Linting
        run: bundle exec standardrb --no-fix

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: test
        run: bundle exec rspec spec

  integration_test:
    runs-on: pub-hk-ubuntu-22.04-xlarge
    strategy:
      matrix:
        stack: ["heroku-20", "heroku-22"]
        version: ["3.1.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Output CHANGELOG
        run: bin/print_changelog "${{matrix.version}}"
      - name: Build Docker image
        run: bin/activate_docker "${{matrix.stack}}"
      - name: Build and package Ruby runtime
        run: bin/build_ruby "${{matrix.stack}}" "${{matrix.version}}"
      - name: Verify ruby executable and output rubygems version
        run: bin/print_gem_version "${{matrix.stack}}" "${{matrix.version}}"

  integration_test-heroku-24-amd:
    runs-on: pub-hk-ubuntu-22.04-xlarge
    strategy:
      matrix:
        stack: ["heroku-24"]
        version: ["3.2.3"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Output CHANGELOG
        run: bin/print_changelog "${{matrix.version}}"
      - name: Build Docker image
        run: bin/activate_docker "${{matrix.stack}}"
      - name: Build and package Ruby runtime
        run: bin/build_ruby "${{matrix.stack}}" "${{matrix.version}}"
      - name: Verify ruby executable and output rubygems version
        run: bin/print_gem_version "${{matrix.stack}}" "${{matrix.version}}" amd64

  integration_test-heroku-24-arm:
    runs-on: pub-hk-ubuntu-22.04-arm-large
    strategy:
      matrix:
        stack: ["heroku-24"]
        version: ["3.2.3"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Docker (and other tools) are not present on the early-access runners.
      # We must install them manually: https://github.com/github-early-access/arm-runners-beta
      - name: Install docker
        run: |
          bin/setup_docker_ci

          sudo usermod -aG docker $USER
          sudo apt-get install acl
          sudo setfacl --modify user:$USER:rw /var/run/docker.sock
      # AWS CLI (and other tools) are not present on the early-access runners.
      # We must install them manually: https://github.com/github-early-access/arm-runners-beta
      - name: Install AWS CLI
        run: | # https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
          sudo apt-get install -y unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - name: Verify AWS installed correctly
        run: aws --version
      - name: Output CHANGELOG
        run: bin/print_changelog "${{matrix.version}}"
      - name: Build Docker image
        run: bin/activate_docker "${{matrix.stack}}"
      - name: Build and package Ruby runtime
        run: bin/build_ruby "${{matrix.stack}}" "${{matrix.version}}"
      - name: Verify ruby executable and output rubygems version
        run: bin/print_gem_version "${{matrix.stack}}" "${{matrix.version}}" arm64
